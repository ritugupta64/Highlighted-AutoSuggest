{"version":3,"sources":["components/Search/SearchUI.js","components/Login/LoginUI.js","components/Services/postData.js","components/Header/Header.js","components/app.js","index.js"],"names":["getSuggestionValue","suggestion","name","shouldRenderSuggestions","value","renderSuggestion","query","matches","AutosuggestHighlightMatch","parts","AutosuggestHighlightParse","population","style","fontSize","length","map","part","index","className","highlight","key","text","SearchUI","onChange","event","newValue","method","setState","onSuggestionsFetchRequested","fetch","then","response","json","data","suggestions","results","onSuggestionsClearRequested","state","planets","this","inputProps","placeholder","Component","LoginUI","props","onInputChange","e","target","onInputSubmit","userDetails","preventDefault","Promise","resolve","reject","headers","Accept","boody","JSON","stringify","rj","catch","err","result","responseJson","console","log","userName","password","htmlFor","type","id","Button","variant","color","onClick","Header","AppBar","position","Toolbar","exact","to","activeClassName","App","Grid","item","xs","Paper","path","component","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.c04e1ea7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\n\r\n// const languages = [\r\n//   {\r\n//     name: \"C\",\r\n//     year: 1972\r\n//   },\r\n//   {\r\n//     name: \"C#\",\r\n//     year: 2000\r\n//   },\r\n//   {\r\n//     name: \"C++\",\r\n//     year: 1983\r\n//   },\r\n//   {\r\n//     name: \"Clojure\",\r\n//     year: 2007\r\n//   },\r\n//   {\r\n//     name: \"Elm\",\r\n//     year: 2012\r\n//   },\r\n//   {\r\n//     name: \"Go\",\r\n//     year: 2009\r\n//   },\r\n//   {\r\n//     name: \"Haskell\",\r\n//     year: 1990\r\n//   },\r\n//   {\r\n//     name: \"Java\",\r\n//     year: 1995\r\n//   },\r\n//   {\r\n//     name: \"Javascript\",\r\n//     year: 1995\r\n//   },\r\n//   {\r\n//     name: \"Perl\",\r\n//     year: 1987\r\n//   },\r\n//   {\r\n//     name: \"PHP\",\r\n//     year: 1995\r\n//   },\r\n//   {\r\n//     name: \"Python\",\r\n//     year: 1991\r\n//   },\r\n//   {\r\n//     name: \"Ruby\",\r\n//     year: 1995\r\n//   },\r\n//   {\r\n//     name: \"Scala\",\r\n//     year: 2003\r\n//   }\r\n// ];\r\n\r\n// function escapeRegexCharacters(str) {\r\n//   return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n// }\r\n\r\n// function getSuggestions(value) {\r\n//   const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n//   if (escapedValue === \"\") {\r\n//     return [];\r\n//   }\r\n\r\n//   const regex = new RegExp(\"^\" + escapedValue, \"i\");\r\n\r\n//   return languages.filter(language => regex.test(language.name));\r\n// }\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.name;\r\n}\r\n\r\nconst shouldRenderSuggestions = value => {\r\n  return true;\r\n};\r\n\r\nfunction renderSuggestion(suggestion, { query }) {\r\n  const matches = AutosuggestHighlightMatch(suggestion.name, query);\r\n  const parts = AutosuggestHighlightParse(suggestion.name, matches);\r\n\r\n  const population = `${suggestion.population}`;\r\n\r\n  return (\r\n    <span style = {{fontSize: population.length > 0 ? population.length + 16 : 'null'}}>\r\n      {parts.map((part, index) => {\r\n        const className = part.highlight\r\n          ? \"react-autosuggest__suggestion-match\"\r\n          : null;\r\n\r\n        return (\r\n          <span className={className} key={index}>\r\n            {part.text}\r\n          </span>\r\n        );\r\n      })}\r\n    </span>\r\n  );\r\n}\r\n\r\nclass SearchUI extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      suggestions: [],\r\n      planets: []\r\n    };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   axios.get(\"https://swapi.co/api/planets\").then(res => {\r\n  //     this.setState(\r\n  //       {\r\n  //         planets: res.data.results\r\n  //       },\r\n  //       () => {\r\n  //         console.log(res.data.results);\r\n  //       }\r\n  //     );\r\n  //   });\r\n  // }\r\n\r\n  onChange = (event, { newValue, method }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n onSuggestionsFetchRequested = ({ value }) => {\r\n    fetch(`https://swapi.co/api/planets?search=${value}`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ suggestions: data.results }))\r\n  }\r\n\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    const inputProps = {\r\n      placeholder: \"Search Planets...\",\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n    return (\r\n      <div className=\"innerGrid\">\r\n        <h1>Search</h1>\r\n        <Autosuggest\r\n          suggestions={suggestions}\r\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n          getSuggestionValue={getSuggestionValue}\r\n          renderSuggestion={renderSuggestion}\r\n          inputProps={inputProps}\r\n          shouldRenderSuggestions={shouldRenderSuggestions}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchUI;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {PostData} from \"../Services/postData\";\r\n\r\nclass LoginUI extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  onInputChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // login = user => {\r\n  //   return axios\r\n  //     .post(\"https://swapi.co/api/people\", {\r\n  //       userName: user.name,\r\n  //       password: user.birth_year\r\n  //     })\r\n  //     .then(response => {\r\n  //       localStorage.setItem(\"usertoken\", response.data);\r\n  //       return response.data;\r\n  //     })\r\n\r\n  //     .catch(err => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  onInputSubmit = e => {\r\n    e.preventDefault();\r\n    // const loginDetails = {\r\n    //   userName: this.state.userName,\r\n    //   password: this.state.password\r\n    // };\r\n\r\n    // this.login(loginDetails).then(res => {\r\n    //   if (res) {\r\n    //     console.log(res);\r\n    //     this.props.history.push(\"/search\");\r\n    //   }\r\n    // });\r\n   // console.log(this.state)\r\n    PostData(this.state).then((result) => {\r\n      let responseJson = result\r\n      console.log(responseJson)\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"innerGrid\">\r\n        <h1>Login</h1>\r\n\r\n        <div className=\"InputContainer\">\r\n          <label htmlFor=\"userName\">User Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name={this.state.userName}\r\n            id=\"userName\"\r\n            onChange={this.onInputChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"InputContainer\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name={this.state.password}\r\n            id=\"password\"\r\n            onChange={this.onInputChange}\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.onInputSubmit}\r\n        >\r\n          Login\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginUI;\r\n","export function PostData(userDetails) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(\"https://swapi.co/api/people\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      boody: JSON.stringify(userDetails)\r\n    })\r\n      .then(response => response.json())\r\n      .then(rj => {\r\n        resolve(rj);\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\n\r\nexport default function Header() {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className=\"headerContainer\">\r\n       \r\n        <NavLink exact to=\"/\" activeClassName = \"is_active\">Login</NavLink>\r\n        \r\n        <NavLink to=\"/search\" activeClassName = \"is_active\">Search</NavLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SearchUI from \"./Search/SearchUI\";\r\nimport LoginUI from \"./Login/LoginUI\";\r\nimport Header from \"./Header/Header\";\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Grid className=\"mainGrid\"> \r\n          <Grid item xs={12}>\r\n            <Paper>\r\n          <Router>\r\n            <Header />\r\n            <Route exact path={`/`} component={LoginUI} />\r\n            <Route path={`/search`} component={SearchUI} />\r\n          </Router>\r\n        </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/app';\r\nimport '../src/main.css';\r\n\r\n\r\nReactDom.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}